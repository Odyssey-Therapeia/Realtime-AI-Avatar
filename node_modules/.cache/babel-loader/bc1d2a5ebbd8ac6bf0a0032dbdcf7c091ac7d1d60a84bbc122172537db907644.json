{"ast":null,"code":"import{RealtimeEventHandler}from'./event_handler.js';import{RealtimeUtils}from'./utils.js';export class RealtimeAPI extends RealtimeEventHandler{/**\n   * Create a new RealtimeAPI instance\n   * @param {{url?: string, apiKey?: string, dangerouslyAllowAPIKeyInBrowser?: boolean, debug?: boolean}} [settings]\n   * @returns {RealtimeAPI}\n   */constructor(){let{url,apiKey,dangerouslyAllowAPIKeyInBrowser,debug}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};super();this.defaultUrl='wss://api.openai.com/v1/realtime';this.url=url||this.defaultUrl;this.apiKey=apiKey||null;this.debug=!!debug;this.ws=null;if(globalThis.WebSocket&&this.apiKey){if(!dangerouslyAllowAPIKeyInBrowser){throw new Error(`Can not provide API key in the browser without \"dangerouslyAllowAPIKeyInBrowser\" set to true`);}}}/**\n   * Tells us whether or not the WebSocket is connected\n   * @returns {boolean}\n   */isConnected(){return!!this.ws;}/**\n   * Writes WebSocket logs to console\n   * @param  {...any} args\n   * @returns {true}\n   */log(){const date=new Date().toISOString();for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}const logs=[`[Websocket/${date}]`].concat(args).map(arg=>{if(typeof arg==='object'&&arg!==null){return JSON.stringify(arg,null,2);}else{return arg;}});if(this.debug){console.log(...logs);}return true;}/**\n   * Connects to Realtime API Websocket Server\n   * @param {{model?: string}} [settings]\n   * @returns {Promise<true>}\n   */async connect(){let{model}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{model:'gpt-4o-realtime-preview'};if(!this.apiKey&&this.url===this.defaultUrl){console.warn(`No apiKey provided for connection to \"${this.url}\"`);}if(this.isConnected()){throw new Error(`Already connected`);}if(globalThis.WebSocket){/**\n       * Web browser\n       */if(this.apiKey){console.warn('Warning: Connecting using API key in the browser, this is not recommended');}const WebSocket=globalThis.WebSocket;const ws=new WebSocket(`${this.url}${model?`?model=${model}`:''}`,['realtime',`openai-insecure-api-key.${this.apiKey}`,'openai-beta.realtime-v1']);ws.addEventListener('message',event=>{const message=JSON.parse(event.data);this.receive(message.type,message);});return new Promise((resolve,reject)=>{const connectionErrorHandler=()=>{this.disconnect(ws);reject(new Error(`Could not connect to \"${this.url}\"`));};ws.addEventListener('error',connectionErrorHandler);ws.addEventListener('open',()=>{this.log(`Connected to \"${this.url}\"`);ws.removeEventListener('error',connectionErrorHandler);ws.addEventListener('error',()=>{this.disconnect(ws);this.log(`Error, disconnected from \"${this.url}\"`);this.dispatch('close',{error:true});});ws.addEventListener('close',()=>{this.disconnect(ws);this.log(`Disconnected from \"${this.url}\"`);this.dispatch('close',{error:false});});this.ws=ws;resolve(true);});});}else{/**\n       * Node.js\n       */const moduleName='ws';const wsModule=await import(/* webpackIgnore: true */moduleName);const WebSocket=wsModule.default;const ws=new WebSocket('wss://api.openai.com/v1/realtime?model=gpt-4o-realtime-preview-2024-10-01',[],{finishRequest:request=>{// Auth\nrequest.setHeader('Authorization',`Bearer ${this.apiKey}`);request.setHeader('OpenAI-Beta','realtime=v1');request.end();}});ws.on('message',data=>{const message=JSON.parse(data.toString());this.receive(message.type,message);});return new Promise((resolve,reject)=>{const connectionErrorHandler=()=>{this.disconnect(ws);reject(new Error(`Could not connect to \"${this.url}\"`));};ws.on('error',connectionErrorHandler);ws.on('open',()=>{this.log(`Connected to \"${this.url}\"`);ws.removeListener('error',connectionErrorHandler);ws.on('error',()=>{this.disconnect(ws);this.log(`Error, disconnected from \"${this.url}\"`);this.dispatch('close',{error:true});});ws.on('close',()=>{this.disconnect(ws);this.log(`Disconnected from \"${this.url}\"`);this.dispatch('close',{error:false});});this.ws=ws;resolve(true);});});}}/**\n   * Disconnects from Realtime API server\n   * @param {WebSocket} [ws]\n   * @returns {true}\n   */disconnect(ws){if(!ws||this.ws===ws){this.ws&&this.ws.close();this.ws=null;return true;}}/**\n   * Receives an event from WebSocket and dispatches as \"server.{eventName}\" and \"server.*\" events\n   * @param {string} eventName\n   * @param {{[key: string]: any}} event\n   * @returns {true}\n   */receive(eventName,event){this.log(`received:`,eventName,event);this.dispatch(`server.${eventName}`,event);this.dispatch('server.*',event);return true;}/**\n   * Sends an event to WebSocket and dispatches as \"client.{eventName}\" and \"client.*\" events\n   * @param {string} eventName\n   * @param {{[key: string]: any}} event\n   * @returns {true}\n   */send(eventName,data){if(!this.isConnected()){throw new Error(`RealtimeAPI is not connected`);}data=data||{};if(typeof data!=='object'){throw new Error(`data must be an object`);}const event={event_id:RealtimeUtils.generateId('evt_'),type:eventName,...data};this.dispatch(`client.${eventName}`,event);this.dispatch('client.*',event);this.log(`sent:`,eventName,event);this.ws.send(JSON.stringify(event));return true;}}","map":{"version":3,"names":["RealtimeEventHandler","RealtimeUtils","RealtimeAPI","constructor","url","apiKey","dangerouslyAllowAPIKeyInBrowser","debug","arguments","length","undefined","defaultUrl","ws","globalThis","WebSocket","Error","isConnected","log","date","Date","toISOString","_len","args","Array","_key","logs","concat","map","arg","JSON","stringify","console","connect","model","warn","addEventListener","event","message","parse","data","receive","type","Promise","resolve","reject","connectionErrorHandler","disconnect","removeEventListener","dispatch","error","moduleName","wsModule","default","finishRequest","request","setHeader","end","on","toString","removeListener","close","eventName","send","event_id","generateId"],"sources":["/Users/johnpaulreju/git_dashboard/simli/simli-openai-realtime/src/lib/realtime-api-beta/lib/api.js"],"sourcesContent":["import { RealtimeEventHandler } from './event_handler.js';\nimport { RealtimeUtils } from './utils.js';\n\nexport class RealtimeAPI extends RealtimeEventHandler {\n  /**\n   * Create a new RealtimeAPI instance\n   * @param {{url?: string, apiKey?: string, dangerouslyAllowAPIKeyInBrowser?: boolean, debug?: boolean}} [settings]\n   * @returns {RealtimeAPI}\n   */\n  constructor({ url, apiKey, dangerouslyAllowAPIKeyInBrowser, debug } = {}) {\n    super();\n    this.defaultUrl = 'wss://api.openai.com/v1/realtime';\n    this.url = url || this.defaultUrl;\n    this.apiKey = apiKey || null;\n    this.debug = !!debug;\n    this.ws = null;\n    if (globalThis.WebSocket && this.apiKey) {\n      if (!dangerouslyAllowAPIKeyInBrowser) {\n        throw new Error(\n          `Can not provide API key in the browser without \"dangerouslyAllowAPIKeyInBrowser\" set to true`\n        );\n      }\n    }\n  }\n\n  /**\n   * Tells us whether or not the WebSocket is connected\n   * @returns {boolean}\n   */\n  isConnected() {\n    return !!this.ws;\n  }\n\n  /**\n   * Writes WebSocket logs to console\n   * @param  {...any} args\n   * @returns {true}\n   */\n  log(...args) {\n    const date = new Date().toISOString();\n    const logs = [`[Websocket/${date}]`].concat(args).map((arg) => {\n      if (typeof arg === 'object' && arg !== null) {\n        return JSON.stringify(arg, null, 2);\n      } else {\n        return arg;\n      }\n    });\n    if (this.debug) {\n      console.log(...logs);\n    }\n    return true;\n  }\n\n  /**\n   * Connects to Realtime API Websocket Server\n   * @param {{model?: string}} [settings]\n   * @returns {Promise<true>}\n   */\n  async connect({ model } = { model: 'gpt-4o-realtime-preview' }) {\n    if (!this.apiKey && this.url === this.defaultUrl) {\n      console.warn(`No apiKey provided for connection to \"${this.url}\"`);\n    }\n    if (this.isConnected()) {\n      throw new Error(`Already connected`);\n    }\n    if (globalThis.WebSocket) {\n      /**\n       * Web browser\n       */\n      if (this.apiKey) {\n        console.warn(\n          'Warning: Connecting using API key in the browser, this is not recommended'\n        );\n      }\n      const WebSocket = globalThis.WebSocket;\n      const ws = new WebSocket(`${this.url}${model ? `?model=${model}` : ''}`, [\n        'realtime',\n        `openai-insecure-api-key.${this.apiKey}`,\n        'openai-beta.realtime-v1',\n      ]);\n      ws.addEventListener('message', (event) => {\n        const message = JSON.parse(event.data);\n        this.receive(message.type, message);\n      });\n      return new Promise((resolve, reject) => {\n        const connectionErrorHandler = () => {\n          this.disconnect(ws);\n          reject(new Error(`Could not connect to \"${this.url}\"`));\n        };\n        ws.addEventListener('error', connectionErrorHandler);\n        ws.addEventListener('open', () => {\n          this.log(`Connected to \"${this.url}\"`);\n          ws.removeEventListener('error', connectionErrorHandler);\n          ws.addEventListener('error', () => {\n            this.disconnect(ws);\n            this.log(`Error, disconnected from \"${this.url}\"`);\n            this.dispatch('close', { error: true });\n          });\n          ws.addEventListener('close', () => {\n            this.disconnect(ws);\n            this.log(`Disconnected from \"${this.url}\"`);\n            this.dispatch('close', { error: false });\n          });\n          this.ws = ws;\n          resolve(true);\n        });\n      });\n    } else {\n      /**\n       * Node.js\n       */\n      const moduleName = 'ws';\n      const wsModule = await import(/* webpackIgnore: true */ moduleName);\n      const WebSocket = wsModule.default;\n      const ws = new WebSocket(\n        'wss://api.openai.com/v1/realtime?model=gpt-4o-realtime-preview-2024-10-01',\n        [],\n        {\n          finishRequest: (request) => {\n            // Auth\n            request.setHeader('Authorization', `Bearer ${this.apiKey}`);\n            request.setHeader('OpenAI-Beta', 'realtime=v1');\n            request.end();\n          },\n        }\n      );\n      ws.on('message', (data) => {\n        const message = JSON.parse(data.toString());\n        this.receive(message.type, message);\n      });\n      return new Promise((resolve, reject) => {\n        const connectionErrorHandler = () => {\n          this.disconnect(ws);\n          reject(new Error(`Could not connect to \"${this.url}\"`));\n        };\n        ws.on('error', connectionErrorHandler);\n        ws.on('open', () => {\n          this.log(`Connected to \"${this.url}\"`);\n          ws.removeListener('error', connectionErrorHandler);\n          ws.on('error', () => {\n            this.disconnect(ws);\n            this.log(`Error, disconnected from \"${this.url}\"`);\n            this.dispatch('close', { error: true });\n          });\n          ws.on('close', () => {\n            this.disconnect(ws);\n            this.log(`Disconnected from \"${this.url}\"`);\n            this.dispatch('close', { error: false });\n          });\n          this.ws = ws;\n          resolve(true);\n        });\n      });\n    }\n  }\n\n  /**\n   * Disconnects from Realtime API server\n   * @param {WebSocket} [ws]\n   * @returns {true}\n   */\n  disconnect(ws) {\n    if (!ws || this.ws === ws) {\n      this.ws && this.ws.close();\n      this.ws = null;\n      return true;\n    }\n  }\n\n  /**\n   * Receives an event from WebSocket and dispatches as \"server.{eventName}\" and \"server.*\" events\n   * @param {string} eventName\n   * @param {{[key: string]: any}} event\n   * @returns {true}\n   */\n  receive(eventName, event) {\n    this.log(`received:`, eventName, event);\n    this.dispatch(`server.${eventName}`, event);\n    this.dispatch('server.*', event);\n    return true;\n  }\n\n  /**\n   * Sends an event to WebSocket and dispatches as \"client.{eventName}\" and \"client.*\" events\n   * @param {string} eventName\n   * @param {{[key: string]: any}} event\n   * @returns {true}\n   */\n  send(eventName, data) {\n    if (!this.isConnected()) {\n      throw new Error(`RealtimeAPI is not connected`);\n    }\n    data = data || {};\n    if (typeof data !== 'object') {\n      throw new Error(`data must be an object`);\n    }\n    const event = {\n      event_id: RealtimeUtils.generateId('evt_'),\n      type: eventName,\n      ...data,\n    };\n    this.dispatch(`client.${eventName}`, event);\n    this.dispatch('client.*', event);\n    this.log(`sent:`, eventName, event);\n    this.ws.send(JSON.stringify(event));\n    return true;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}