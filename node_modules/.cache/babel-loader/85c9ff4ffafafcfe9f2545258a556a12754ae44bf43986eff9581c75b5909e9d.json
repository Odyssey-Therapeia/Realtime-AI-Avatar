{"ast":null,"code":"/**\n * Constants for help with visualization\n * Helps map frequency ranges from Fast Fourier Transform\n * to human-interpretable ranges, notably music ranges and\n * human vocal ranges.\n */// Eighth octave frequencies\nconst octave8Frequencies=[4186.01,4434.92,4698.63,4978.03,5274.04,5587.65,5919.91,6271.93,6644.88,7040.0,7458.62,7902.13];// Labels for each of the above frequencies\nconst octave8FrequencyLabels=['C','C#','D','D#','E','F','F#','G','G#','A','A#','B'];/**\n * All note frequencies from 1st to 8th octave\n * in format \"A#8\" (A#, 8th octave)\n */export const noteFrequencies=[];export const noteFrequencyLabels=[];for(let i=1;i<=8;i++){for(let f=0;f<octave8Frequencies.length;f++){const freq=octave8Frequencies[f];noteFrequencies.push(freq/Math.pow(2,8-i));noteFrequencyLabels.push(octave8FrequencyLabels[f]+i);}}/**\n * Subset of the note frequencies between 32 and 2000 Hz\n * 6 octave range: C1 to B6\n */const voiceFrequencyRange=[32.0,2000.0];export const voiceFrequencies=noteFrequencies.filter((_,i)=>{return noteFrequencies[i]>voiceFrequencyRange[0]&&noteFrequencies[i]<voiceFrequencyRange[1];});export const voiceFrequencyLabels=noteFrequencyLabels.filter((_,i)=>{return noteFrequencies[i]>voiceFrequencyRange[0]&&noteFrequencies[i]<voiceFrequencyRange[1];});","map":{"version":3,"names":["octave8Frequencies","octave8FrequencyLabels","noteFrequencies","noteFrequencyLabels","i","f","length","freq","push","Math","pow","voiceFrequencyRange","voiceFrequencies","filter","_","voiceFrequencyLabels"],"sources":["/Users/johnpaulreju/git_dashboard/simli/simli-openai-realtime/src/lib/wavtools/lib/analysis/constants.js"],"sourcesContent":["/**\n * Constants for help with visualization\n * Helps map frequency ranges from Fast Fourier Transform\n * to human-interpretable ranges, notably music ranges and\n * human vocal ranges.\n */\n\n// Eighth octave frequencies\nconst octave8Frequencies = [\n  4186.01, 4434.92, 4698.63, 4978.03, 5274.04, 5587.65, 5919.91, 6271.93,\n  6644.88, 7040.0, 7458.62, 7902.13,\n];\n\n// Labels for each of the above frequencies\nconst octave8FrequencyLabels = [\n  'C',\n  'C#',\n  'D',\n  'D#',\n  'E',\n  'F',\n  'F#',\n  'G',\n  'G#',\n  'A',\n  'A#',\n  'B',\n];\n\n/**\n * All note frequencies from 1st to 8th octave\n * in format \"A#8\" (A#, 8th octave)\n */\nexport const noteFrequencies = [];\nexport const noteFrequencyLabels = [];\nfor (let i = 1; i <= 8; i++) {\n  for (let f = 0; f < octave8Frequencies.length; f++) {\n    const freq = octave8Frequencies[f];\n    noteFrequencies.push(freq / Math.pow(2, 8 - i));\n    noteFrequencyLabels.push(octave8FrequencyLabels[f] + i);\n  }\n}\n\n/**\n * Subset of the note frequencies between 32 and 2000 Hz\n * 6 octave range: C1 to B6\n */\nconst voiceFrequencyRange = [32.0, 2000.0];\nexport const voiceFrequencies = noteFrequencies.filter((_, i) => {\n  return (\n    noteFrequencies[i] > voiceFrequencyRange[0] &&\n    noteFrequencies[i] < voiceFrequencyRange[1]\n  );\n});\nexport const voiceFrequencyLabels = noteFrequencyLabels.filter((_, i) => {\n  return (\n    noteFrequencies[i] > voiceFrequencyRange[0] &&\n    noteFrequencies[i] < voiceFrequencyRange[1]\n  );\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,GAEA;AACA,KAAM,CAAAA,kBAAkB,CAAG,CACzB,OAAO,CAAE,OAAO,CAAE,OAAO,CAAE,OAAO,CAAE,OAAO,CAAE,OAAO,CAAE,OAAO,CAAE,OAAO,CACtE,OAAO,CAAE,MAAM,CAAE,OAAO,CAAE,OAAO,CAClC,CAED;AACA,KAAM,CAAAC,sBAAsB,CAAG,CAC7B,GAAG,CACH,IAAI,CACJ,GAAG,CACH,IAAI,CACJ,GAAG,CACH,GAAG,CACH,IAAI,CACJ,GAAG,CACH,IAAI,CACJ,GAAG,CACH,IAAI,CACJ,GAAG,CACJ,CAED;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,eAAe,CAAG,EAAE,CACjC,MAAO,MAAM,CAAAC,mBAAmB,CAAG,EAAE,CACrC,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAI,CAAC,CAAEA,CAAC,EAAE,CAAE,CAC3B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,kBAAkB,CAACM,MAAM,CAAED,CAAC,EAAE,CAAE,CAClD,KAAM,CAAAE,IAAI,CAAGP,kBAAkB,CAACK,CAAC,CAAC,CAClCH,eAAe,CAACM,IAAI,CAACD,IAAI,CAAGE,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE,CAAC,CAAGN,CAAC,CAAC,CAAC,CAC/CD,mBAAmB,CAACK,IAAI,CAACP,sBAAsB,CAACI,CAAC,CAAC,CAAGD,CAAC,CAAC,CACzD,CACF,CAEA;AACA;AACA;AACA,GACA,KAAM,CAAAO,mBAAmB,CAAG,CAAC,IAAI,CAAE,MAAM,CAAC,CAC1C,MAAO,MAAM,CAAAC,gBAAgB,CAAGV,eAAe,CAACW,MAAM,CAAC,CAACC,CAAC,CAAEV,CAAC,GAAK,CAC/D,MACE,CAAAF,eAAe,CAACE,CAAC,CAAC,CAAGO,mBAAmB,CAAC,CAAC,CAAC,EAC3CT,eAAe,CAACE,CAAC,CAAC,CAAGO,mBAAmB,CAAC,CAAC,CAAC,CAE/C,CAAC,CAAC,CACF,MAAO,MAAM,CAAAI,oBAAoB,CAAGZ,mBAAmB,CAACU,MAAM,CAAC,CAACC,CAAC,CAAEV,CAAC,GAAK,CACvE,MACE,CAAAF,eAAe,CAACE,CAAC,CAAC,CAAGO,mBAAmB,CAAC,CAAC,CAAC,EAC3CT,eAAe,CAACE,CAAC,CAAC,CAAGO,mBAAmB,CAAC,CAAC,CAAC,CAE/C,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}